install.packages("rlang")
install.packages("rlang")
install.packages("xfun")
library(dada2)
path <- "sequences"
list.files(path)
# Fastq filenames have format: SAMPLENAME_R1_001.fastq. We only have forward reads.
fnFs <- sort(list.files(path, pattern="_R1_001.fastq", full.names = TRUE))
# Extract sample names, assuming filenames have format: SAMPLENAME_XXX.fastq
sample.names <- sapply(strsplit(basename(fnFs), "_"), `[`, 1)
# take first 2 forward reads and pop out a graph of read quality
plotQualityProfile(fnFs[1:2])
# Place filtered files in filtered/ subdirectory
filtFs <- file.path(path, "filtered", paste0(sample.names, "_F_filt.fastq.gz"))
names(filtFs) <- sample.names
# quality decreases at 120
out <- filterAndTrim(fnFs, filtFs, truncLen=c(120),
maxN=0, maxEE=c(2), truncQ=2, rm.phix=TRUE,
compress=TRUE, multithread=FALSE) # On Windows set multithread=FALSE
head(out)
errF <- learnErrors(filtFs, multithread=TRUE)
errF <- learnErrors(filtFs, multithread=FALSE)
plotErrors(errF, nominalQ=TRUE)
errF <- learnErrors(filtFs, multithread=TRUE)
plotErrors(errF, nominalQ=TRUE)
errF <- learnErrors(filtFs, multithread=TRUE)
errF <- learnErrors(filtFs, multithread=FALSE)
plotErrors(errF, nominalQ=TRUE)
dadaFs <- dada(filtFs, err=errF, multithread=FALSE)
seqtab <- makeSequenceTable(dadaFs)
dim(seqtab)
View(dadaFs)
seqtab <- makeSequenceTable(dadaFs)
dim(seqtab)
# Inspect distribution of sequence lengths
table(nchar(getSequences(seqtab)))
seqtab.nochim <- removeBimeraDenovo(seqtab, method="consensus", multithread=FALSE, verbose=TRUE)
dim(seqtab.nochim)
getN <- function(x) sum(getUniques(x))
track <- cbind(out, sapply(dadaFs, getN), rowSums(seqtab.nochim))
colnames(track) <- c("input", "filtered", "denoisedF", "denoisedR", "nonchim")
save(seqtab.nochim, file="RData/seqtab.nochim.RData")
setwd("C:/Users/tayle/Desktop/Spring-2024/Bioinformatics-BIOL 4810-Tricia Van Laar/Bioinformatics/MicrobiomeDADA2")

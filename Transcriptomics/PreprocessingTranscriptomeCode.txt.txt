# Create a new environment for transcriptomics
mamba create --name transcriptomics

# activate that environment
mamba activate transcriptomics

# install the necessary packages
conda install -c bioconda hisat2
conda install -c bioconda samtools
conda install -c bioconda stringtie
conda install -c bioconda gffcompare

# Download the transcriptome data set and reference genome files (as .fna, .fasta, and .gff) from the link on Canvas. The transcriptome data set is 8 total samples, 2 replicates of planktonically grown P. aeruginosa and 2 replicates of biofilm P. aeruginosa each with a forward (pass 1) and reverse (pass 2) read. The .fna, .fasta, and .gff files should be directly in your folder for transcriptome work. The reads will be in a folder called fastq in your transcriptome folder.

# Unzip our given (zipped) folder into a new folder called fastq
gunzip fastq/*.gz

# Prepare the genome file
hisat2-build paeruginosa.fna paeru

# Align reads to genome and assemble the transcripts. You will need to do these commands for every pair of reads (there are 4 in the tutorial). As an example, this is the command I ran for the plank01 sample.
hisat2 -q -x paeru -1 fastq/plank01_F.fastq -2 fastq/plank01_R.fastq -S plank01.sam

hisat2 -q -x paeru -1 fastq/biofilm01_F.fastq -2 fastq/biofilm01_R.fastq -S biofilm01.sam
hisat2 -q -x paeru -1 fastq/biofilm02_F.fastq -2 fastq/biofilm02_R.fastq -S biofilm02.sam
hisat2 -q -x paeru -1 fastq/plank01_F.fastq -2 fastq/plank01_R.fastq -S plank01.sam
hisat2 -q -x paeru -1 fastq/plank02_F.fastq -2 fastq/plank02_R.fastq -S plank02.sam


# Convert the .sam file to a .bam file. As an example, this is the command I ran for the plank01sample. This .sam file is also large, so you can delete it once youâ€™ve created the .bam file.

samtools view -bS plank01.sam > plank01.bam
samtools view -bS plank02.sam > plank02.bam
samtools view -bS biofilm01.sam > biofilm01.bam
samtools view -bS biofilm02.sam > biofilm02.bam


# Convert the .bam to a sorted .bam. This compresses the file and sorts the variants for easier discovery. As an example, this is the command I ran for the plank01 sample. 

samtools sort plank01.bam -o plank01.sorted.bam
samtools sort plank02.bam -o plank02.sorted.bam
samtools sort biofilm01.bam -o biofilm01.sorted.bam
samtools sort biofilm02.bam -o biofilm02.sorted.bam


# Reconstruct transcripts for each sample. As an example, this is the command I ran for the plank01 sample. 

stringtie plank01.sorted.bam -G paeruginosa.gff -o stringtie/plank01.transcripts.gtf
stringtie plank02.sorted.bam -G paeruginosa.gff -o stringtie/plank02.transcripts.gtf
stringtie biofilm01.sorted.bam -G paeruginosa.gff -o stringtie/biofilm01.transcripts.gtf
stringtie biofilm02.sorted.bam -G paeruginosa.gff -o stringtie/biofilm02.transcripts.gtf

# Create a file with the names of the files. As an example, this is the command I ran for the plank01 sample, followed by the plank02 sample.  Remember, file 1 gets >. Files 2-4 >>

echo stringtie/plank01.transcripts.gtf > assemblies.txt 
echo stringtie/plank02.transcripts.gtf >> assemblies.txt 
echo stringtie/biofilm01.transcripts.gtf >> assemblies.txt 
echo stringtie/biofilm02.transcripts.gtf >> assemblies.txt 

# Verify that assemblies.txt contains all file names #remember the head command lets you view the first contents of a files. 

head assemblies.txt

# Merge the transcripts.
# Input is paeruginosa.gff (this has the paths to the individual transcript assembly files generated for each sample) StringTie will read these assembly files and merge their transcripts into the final annotation.
# Output transcriptome annotation file called stringtie_merged.gtf

stringtie --merge -G paeruginosa.gff -o stringtie_merged.gtf assemblies.txt

# Count the number of lines in the merged file (5741)

cat stringtie_merged.gtf | grep -v "^#" | awk '$3=="transcript" {print}' | wc -l

# Compare assembled transcripts to known transcripts (5678 reference transcripts loaded. / 5741 query transfrags loaded.)

gffcompare -r paeruginosa.gff -G -o merged stringtie_merged.gtf

# View success of comparison (0 discarded as redundant)

  cat merged.stats

# Estimate abundance (-e) and create Ballgown folder (-B) (package for use in visualization). You will need to do this for each file. Here is the specific command I used for the plank01 file.
# assemble transcripts. Our reference annotation in gtf format (-G) is stringtie_merged.gtf.
# output plank01 to a folder called plank01 within ballgown.
# -p 8 tells it to use 8 threads for parallel processing

stringtie -e -B -p 8 -G stringtie_merged.gtf -o ballgown/plank01/plank01.gtf plank01.sorted.bam
stringtie -e -B -p 8 -G stringtie_merged.gtf -o ballgown/plank02/plank02.gtf plank02.sorted.bam
stringtie -e -B -p 8 -G stringtie_merged.gtf -o ballgown/biofilm01/biofilm01.gtf biofilm01.sorted.bam
stringtie -e -B -p 8 -G stringtie_merged.gtf -o ballgown/biofilm02/biofilm02.gtf biofilm02.sorted.bam
